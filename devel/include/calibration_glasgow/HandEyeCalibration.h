// Generated by gencpp from file calibration_glasgow/HandEyeCalibration.msg
// DO NOT EDIT!


#ifndef CALIBRATION_GLASGOW_MESSAGE_HANDEYECALIBRATION_H
#define CALIBRATION_GLASGOW_MESSAGE_HANDEYECALIBRATION_H

#include <ros/service_traits.h>


#include <calibration_glasgow/HandEyeCalibrationRequest.h>
#include <calibration_glasgow/HandEyeCalibrationResponse.h>


namespace calibration_glasgow
{

struct HandEyeCalibration
{

typedef HandEyeCalibrationRequest Request;
typedef HandEyeCalibrationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct HandEyeCalibration
} // namespace calibration_glasgow


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::calibration_glasgow::HandEyeCalibration > {
  static const char* value()
  {
    return "797b3801ffc970cbdf739724228d484b";
  }

  static const char* value(const ::calibration_glasgow::HandEyeCalibration&) { return value(); }
};

template<>
struct DataType< ::calibration_glasgow::HandEyeCalibration > {
  static const char* value()
  {
    return "calibration_glasgow/HandEyeCalibration";
  }

  static const char* value(const ::calibration_glasgow::HandEyeCalibration&) { return value(); }
};


// service_traits::MD5Sum< ::calibration_glasgow::HandEyeCalibrationRequest> should match 
// service_traits::MD5Sum< ::calibration_glasgow::HandEyeCalibration > 
template<>
struct MD5Sum< ::calibration_glasgow::HandEyeCalibrationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::calibration_glasgow::HandEyeCalibration >::value();
  }
  static const char* value(const ::calibration_glasgow::HandEyeCalibrationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::calibration_glasgow::HandEyeCalibrationRequest> should match 
// service_traits::DataType< ::calibration_glasgow::HandEyeCalibration > 
template<>
struct DataType< ::calibration_glasgow::HandEyeCalibrationRequest>
{
  static const char* value()
  {
    return DataType< ::calibration_glasgow::HandEyeCalibration >::value();
  }
  static const char* value(const ::calibration_glasgow::HandEyeCalibrationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::calibration_glasgow::HandEyeCalibrationResponse> should match 
// service_traits::MD5Sum< ::calibration_glasgow::HandEyeCalibration > 
template<>
struct MD5Sum< ::calibration_glasgow::HandEyeCalibrationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::calibration_glasgow::HandEyeCalibration >::value();
  }
  static const char* value(const ::calibration_glasgow::HandEyeCalibrationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::calibration_glasgow::HandEyeCalibrationResponse> should match 
// service_traits::DataType< ::calibration_glasgow::HandEyeCalibration > 
template<>
struct DataType< ::calibration_glasgow::HandEyeCalibrationResponse>
{
  static const char* value()
  {
    return DataType< ::calibration_glasgow::HandEyeCalibration >::value();
  }
  static const char* value(const ::calibration_glasgow::HandEyeCalibrationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CALIBRATION_GLASGOW_MESSAGE_HANDEYECALIBRATION_H
